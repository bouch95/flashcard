{
  "decks": [
    {
      "id": 1,
      "name": "Rendering in React",
      "description": "React's component structure allows for quickly building a complex web application that relies on DOM manipulation. "
    },
    {
      "name": "React Router",
      "description": "React Router is a collection of navigational components that compose declaratively with your application.",
      "id": 2
    },
    {
      "id": 3,
      "name": "ddedffd-test",
      "description": "ddsscccc-test"
    },
    {
      "name": "Alexis D Bouchard",
      "description": "testestt",
      "id": 4
    },
    {
      "name": "vdddddd",
      "description": "sfasfasdfasf",
      "id": 5
    },
    {
      "name": "test 1",
      "description": "test description",
      "id": 6
    },
    {
      "name": "new - monday ",
      "description": "sdfdddddfd d  dfdf dfdf ",
      "id": 7
    },
    {
      "name": "dd ffssffff f fdsf s",
      "description": "adf adsf asdf asdf ssss",
      "id": 8
    },
    {
      "name": "The latest deck",
      "description": "trying to figure out",
      "id": 9
    }
  ],
  "cards": [
    {
      "id": 1,
      "front": "Differentiate between Real DOM and Virtual DOM. ddddddddd",
      "back": "Virtual DOM updates are faster but do not directly update the HTML. dddddddddddddd",
      "deckId": 1
    },
    {
      "id": 2,
      "front": "How do you modify the state of a different React component?",
      "back": "Not at all! State is visible to the component only.",
      "deckId": 1
    },
    {
      "id": 3,
      "front": "How do you pass data 'down' to a React child component?",
      "back": "As properties or props",
      "deckId": 1
    },
    {
      "front": "What path will match the follow Route?\n<Route>\n  <NotFound />\n</Route>",
      "back": "All paths. A route with no path matches all URL's",
      "deckId": 2,
      "id": 4
    },
    {
      "front": "What does <Switch> do?",
      "back": "Renders the first matching child <Route> ",
      "deckId": 2,
      "id": 5
    },
    {
      "id": 7,
      "front": "sdsfsdfdsshello dfdfdfdf  df df",
      "back": "asdfsdfasdsdddsdsdsddsdsdsd fd  ddf  dff  fd",
      "deckId": 1
    },
    {
      "front": "dasasds",
      "back": "daszdasdasdasd  as asdaw",
      "deckId": 3,
      "id": 8
    },
    {
      "id": 9,
      "front": "s",
      "back": "sdfsdfdddfdf",
      "deckId": 3
    },
    {
      "front": "4 dd  fffffed",
      "back": "d ffddsdsddf fd",
      "deckId": 3,
      "id": 11
    },
    {
      "front": "dasfasdd  dd",
      "back": "ddfffd s   rervv",
      "deckId": 3,
      "id": 12
    },
    {
      "front": "fertref",
      "back": "ddddddddddddddddddddddddddddddddddddd",
      "deckId": 3,
      "id": 13
    },
    {
      "front": "did it work?",
      "back": "asdlkfjlasdkjfl;asdkjf;alsdfk;j",
      "deckId": 1,
      "id": 14
    },
    {
      "id": 15,
      "front": "it's after 6 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv",
      "back": "daslkkfj  lkj fdsklfsdlsdfkl  saldk vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv",
      "deckId": 1
    },
    {
      "front": "yet another",
      "back": "l;kdfjgkklkl kddk",
      "deckId": 1,
      "id": 16
    }
  ]
}